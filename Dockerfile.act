# Use a Node.js base image with Docker support
FROM node:18-bullseye

# Install dependencies for Docker and act
RUN apt-get update && apt-get install -y \
    curl \
    git \
    ca-certificates \
    gnupg \
    lsb-release \
    && rm -rf /var/lib/apt/lists/*

# Install Docker
RUN curl -fsSL https://download.docker.com/linux/debian/gpg | gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
RUN echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/debian $(lsb_release -cs) stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null
RUN apt-get update && apt-get install -y docker-ce-cli && rm -rf /var/lib/apt/lists/*

# Install act
RUN curl -s https://raw.githubusercontent.com/nektos/act/master/install.sh | bash

# Set up the working directory
WORKDIR /app

# Copy package files first for better caching
COPY package*.json ./

# Install project dependencies
RUN npm ci

# Copy project files
COPY . .

# Create a script to run act with proper configuration
RUN echo '#!/bin/bash\n\
# Check if Docker socket is available\n\
if [ ! -S /var/run/docker.sock ]; then\n\
    echo "Error: Docker socket not mounted. Please run with -v /var/run/docker.sock:/var/run/docker.sock"\n\
    exit 1\n\
fi\n\
\n\
# Create act config directory for current user if it does not exist\n\
mkdir -p ~/.config/act\n\
\n\
# Create act configuration if it does not exist\n\
if [ ! -f ~/.config/act/actrc ]; then\n\
    echo "-P ubuntu-latest=catthehacker/ubuntu:act-latest" > ~/.config/act/actrc\n\
fi\n\
\n\
# Run act with the provided arguments\n\
exec act "$@"' > /usr/local/bin/run-act.sh && chmod +x /usr/local/bin/run-act.sh

# Set the entrypoint to our script
ENTRYPOINT ["/usr/local/bin/run-act.sh"]
